//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDLight;           // Offset:    0, size:   64
    float3  gEyePosW;                   // Offset:   64, size:   12
}

cbuffer cbPerObject
{
    float4x4 gWorldViewProj;            // Offset:    0, size:   64
    float4x4 gWorld;                    // Offset:   64, size:   64
    float4x4 gWorldInvTranspose;        // Offset:  128, size:   64
}

cbuffer cbPerObject2
{
    Material gMaterial;                 // Offset:    0, size:   48
}

//
// 3 local object(s)
//
SamplerState MeshTextureSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
Texture2D gDiffuseMap;
Texture2D gSpecMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 Tech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorldViewProj;           // Offset:    0 Size:    64
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  128 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyzw        1     NONE   float   xyzw
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Normal.x; v1.y <- vin.Normal.y; v1.z <- vin.Normal.z; 
                //   v2.x <- vin.TexCoord.x; v2.y <- vin.TexCoord.y; 
                //   o3.x <- <VS return value>.UV.x; o3.y <- <VS return value>.UV.y; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; o1.w <- <VS return value>.PosW.w; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 50 "C:\Users\msukka1\Documents\Jahbal\fx\Generic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- vout.PosW.z
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // r1.w <- vout.PosW.w
                dp4 r2.x, r0.xyzw, cb0[0].xyzw  // r2.x <- vout.PosH.x
                dp4 r2.y, r0.xyzw, cb0[1].xyzw  // r2.y <- vout.PosH.y
                dp4 r2.z, r0.xyzw, cb0[2].xyzw  // r2.z <- vout.PosH.z
                dp4 r2.w, r0.xyzw, cb0[3].xyzw  // r2.w <- vout.PosH.w
                mov r0.xyz, v1.xyzx  // r0.x <- vout.NormalW.x; r0.y <- vout.NormalW.y; r0.z <- vout.NormalW.z
                mov r3.xy, v2.xyxx  // r3.x <- vout.UV.x; r3.y <- vout.UV.y
                mov o0.xyzw, r2.xyzw
                mov o1.xyzw, r1.xyzw
                mov o2.xyz, r0.xyzx
                mov o3.xy, r3.xyxx
                ret 
                // Approximately 17 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //       float3 direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDLight;                         // Offset:    0 Size:    64
                //   float3 gEyePosW;                   // Offset:   64 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // MeshTextureSampler                sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gSpecMap                          texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyzw        1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[5], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 9
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; v1.w <- pin.PosW.w; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.UV.x; v3.y <- pin.UV.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 60 "C:\Users\msukka1\Documents\Jahbal\fx\Generic.fx"
                mov r0.xyz, cb0[3].xyzx  // r0.x <- light_direction.x; r0.y <- light_direction.y; r0.z <- light_direction.z
                mov r1.xyzw, cb0[0].xyzw  // r1.x <- light_ambientC.x; r1.y <- light_ambientC.y; r1.z <- light_ambientC.z; r1.w <- light_ambientC.w
                mov r2.xyzw, cb0[1].xyzw  // r2.x <- light_diffuseC.x; r2.y <- light_diffuseC.y; r2.z <- light_diffuseC.z; r2.w <- light_diffuseC.w
                mov r3.xyzw, cb0[2].xyzw  // r3.x <- light_specC.x; r3.y <- light_specC.y; r3.z <- light_specC.z; r3.w <- light_specC.w
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v3.xyxx, t0.xyzw, s0  // r4.x <- material_diffuseC.x; r4.y <- material_diffuseC.y; r4.z <- material_diffuseC.z; r4.w <- material_diffuseC.w
                sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v3.xyxx, t1.xyzw, s0  // r5.x <- material_specC.x; r5.y <- material_specC.y; r5.z <- material_specC.z; r5.w <- material_specC.w
                mov r4.xyzw, r4.xyzw  // r4.x <- material_ambientC.x; r4.y <- material_ambientC.y; r4.z <- material_ambientC.z; r4.w <- material_ambientC.w
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                dp3 r0.w, v2.xyzx, v2.xyzx
                rsq r0.w, r0.w
                mul r6.xyz, r0.wwww, v2.xyzx  // r6.x <- pin.NormalW.x; r6.y <- pin.NormalW.y; r6.z <- pin.NormalW.z
                
                #line 72
                mov r7.xyz, -v1.xyzx
                add r7.xyz, r7.xyzx, cb0[4].xyzx  // r7.x <- ptoeye.x; r7.y <- ptoeye.y; r7.z <- ptoeye.z
                dp3 r0.w, r7.xyzx, r7.xyzx
                rsq r0.w, r0.w
                mul r7.xyz, r0.wwww, r7.xyzx
                dp3 r0.w, r0.xyzx, r6.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r8.xyz, r0.wwww, r6.xyzx
                add r8.xyz, r0.xyzx, r8.xyzx  // r8.x <- reflected.x; r8.y <- reflected.y; r8.z <- reflected.z
                dp3 r0.w, r8.xyzx, r8.xyzx
                rsq r0.w, r0.w
                mul r8.xyz, r0.wwww, r8.xyzx
                mov r0.xyz, -r0.xyzx
                dp3 r0.x, r0.xyzx, r6.xyzx
                max r0.x, r0.x, l(0.000000)  // r0.x <- diffuse_factor
                mul r2.xyzw, r2.xyzw, r4.xyzw
                mul r2.xyzw, r0.xxxx, r2.xyzw  // r2.x <- diffuse_color.x; r2.y <- diffuse_color.y; r2.z <- diffuse_color.z; r2.w <- diffuse_color.w
                
                #line 82
                mov r6.xyzw, l(0,0,0,0)  // r6.x <- spec_color.x; r6.y <- spec_color.y; r6.z <- spec_color.z; r6.w <- spec_color.w
                lt r0.x, l(0.000000), r0.x
                if_nz r0.x
                  dp3 r0.x, r8.xyzx, r7.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r5.w
                  exp r0.x, r0.x  // r0.x <- spec_factor
                  mul r3.xyzw, r3.xyzw, r5.xyzw
                  mul r6.xyzw, r0.xxxx, r3.xyzw
                endif 
                mul r0.xyzw, r1.xyzw, r4.xyzw  // r0.x <- ambient_color.x; r0.y <- ambient_color.y; r0.z <- ambient_color.z; r0.w <- ambient_color.w
                add r0.xyzw, r2.xyzw, r0.xyzw
                add r0.xyzw, r6.xyzw, r0.xyzw  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w
                
                #line 94
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 47 instruction slots used
                            
            };
        }

    }

}

